#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Compact
Input = Stream
Parser = LL
#RegularDefinitions
dig: [0-9]
mai: [A-Z]
min: [a-z]
#Tokens
identificador: ((({min}+ {mai}? {min}*)+ | {mai} | ({mai} {min}+)+ {mai}?) {dig}? {dig}?) 
constante_int: [1-9] {dig}? {dig}? (\. {dig} {dig} {dig})* | 0
constante_float: [1-9] {dig}? {dig}? (\. {dig} {dig} {dig})* , {dig}+ | 0 , {dig}+ 
constante_binaria: 0 (b | B) (0 | 1)+ 
constante_string: \" [^\"\n\\]* \"

// palavras reservadas
pr_check = identificador: "check"
pr_and = identificador: "and"
pr_else = identificador: "else"
pr_end = identificador: "end"
pr_false = identificador: "false"
pr_not = identificador: "not"
pr_or = identificador: "or"
pr_read = identificador: "read"
pr_true = identificador: "true"
pr_write = identificador: "write"
pr_writeln = identificador: "writeln"
pr_if = identificador: "if"

// símbolos especiais:
","
";"
"="
":"
":" 
"("
")" 
"=="
"!="
"<"
"<="
">"
">="
"+"
"-"
"*"
"/"

//caracteres de formatação
:[\s\t\n]

// comentários: reconhecer e ignorar

// comentario linha:
	:! # [^\n]*
// comentario bloco:
	:! \{\n[^\{\}]*\n\}

 
#NonTerminals
<lista_comandos>
<lista_expressao>
<comando>
<lista_id>
<atribuicao>
<entrada_dados>
<saida_dados>
<selecao>
<repeticao>
<expressao>

#Grammar
<atribuicao> ::= <lista_id> "=" <expressao> | <lista_id> "=" <expressao> ":" pr_if <expressao>;

<entrada_dados> ::= pr_read "(" <lista_id> ")";

<saida_dados> ::= pr_write "(" <lista_expressao> ")" | pr_writeln "(" <lista_expressao> ")";

<lista_expressao> ::= <expressao> | <expressao>","<lista_expressao>;

<selecao> ::= pr_if "(" <expressao> ")" <lista_comandos> pr_end | pr_if "(" <expressao> ")" <lista_comandos> pr_else <lista_comandos> pr_end;

<repeticao> ::= pr_check "(" <expressao> ")" ":" pr_if pr_true <lista_comandos> pr_end | pr_check "(" <expressao> ")" ":" pr_if pr_false <lista_comandos> pr_end;

<comando> ::= <atribuicao> | <entrada_dados> | <saida_dados> | <selecao> | <repeticao>;

<lista_comandos> ::= <comando> | <comando>";"<lista_comandos>;

<lista_id> ::= identificador | identificador","<lista_id>;


